<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

	<properties>
		<title>Introduction</title>
		<author>Nicolas Richeton</author>
	</properties>

	<body>


		<h1>Introduction</h1>

		<p>The goal of this toolkit is to provide a quick way to set up a
			status page in a Java application and provides runtime informations
			(services statistics, configuration values, batch process state)
			which really helps for both development and production.
		</p>

		<h2>Quickstart for webapps</h2>

		<p>This project is best used with Maven.</p>
		<p>Add Maven dependency :</p>
		<source><![CDATA[
<repository>
	<id>appstatus-repository</id>
	<name>App Status repository</name>
	<url>http://appstatus.sourceforge.net/maven2/repository</url>
</repository>

(...)

<dependency>
    	<groupId>net.sf.appstatus </groupId>
    	<artifactId>appstatus-web</artifactId>
    	<version>0.0.9</version>
    	<scope>compile</scope>
</dependency>]]></source>

		<p>Add servlet to web.xml :</p>
		<source><![CDATA[
<servlet>
        <servlet-name>status</servlet-name>
        <servlet-class>net.sf.appstatus.web.StatusServlet</servlet-class>
</servlet>
        
<servlet-mapping>
        <servlet-name>status</servlet-name>
        <url-pattern>/status</url-pattern>
</servlet-mapping>]]></source>

		<p>Create a test for your application (implementing ICheck):</p>

		<source>
public class GooglePingStatusChecker extends AbstractCheck {

	public ICheckResult checkStatus() {
		ICheckResult result = null;

		try {
			InetAddress address = InetAddress.getByName("www.google.com");

			if (address.isReachable(2000)) {
				result = createResult(OK);
				result.setDescription("Google Access ok");

			} else {
				throw new Exception("Ping timeout (2000ms)");
			}

		} catch (Exception e) {
			result = createResult(WARN);
			result.setDescription("Google ping failed");
			result.setResolutionSteps("Ping failed. This means that ICMP messages are blocked by this host. (This may not be an issue) "
					+ e.getMessage());

		}

		return result;
	}

	public String getGroup() {
		return "google";
	}

	public String getName() {
		return "Google Ping check";
	}

}		</source>

		<p>Register the test in /status-check.properties :</p>
		<source>
			check.google.ping=net.sf.appstatus.dummy.GooglePingStatusChecker
		</source>

		<p>Go to http://&lt;server&gt;/&lt;app-context&gt;/status :</p>

		<img src="images/appstatus-status.png" alt="Status page example"
			style="border: 1px solid black;" />
		<h2>Reporting war details for webapps built with Maven</h2>
		<p>If you are using Maven to build your webapp, AppStatus provides a
			property provider which reports artifactId, groupId and version. Just
			add the following property provider :
		</p>
		<source>
			property.maven=net.sf.appstatus.core.property.impl.WarMavenVersionProvider
		</source>

		<h2>Reporting JVM informations</h2>
		<source>
			property.jvm=net.sf.appstatus.core.property.impl.JvmPropertyProvider
		</source>

		<h2>Reporting Host informations</h2>
		<p>Both hostname and ip are reported.</p>
		<source>
			property.localhost=net.sf.appstatus.core.property.impl.HostPropertyProvider
		</source>
	</body>
</document>
  
  